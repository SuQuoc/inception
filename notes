# Volumes in Docker_______________________________
/var/lib/docker/volumes
## u dont have access so u have to start a secure shell to get into it: sudo -s


# Locations of files____________________________________
## Mariadb
my.cnf:   				/etc/mysql/
50-server.cnf:			/etc/mysql/mariadb.conf.d/50-server.cnf

## Wordpress
wp-config.php			/var/www/html/ (in my case append: qtran.42.fr/wordpress)

## Local machine
hosts					/etc/


# Problems i faced______________________________________
- not seeing a page with login.42.fr
	- add the name of your website to /etc/hosts file
- having 2 instances of mariadb service (in 1 container) running
	- switched from mysqld_safe -datadir=... & to service mariadb start
	- probably used mysqld twice instead of using mysql
- both mariadb instances exiting with 137
	- changed the CMD in Dockerfile from mysqld_safe to "mariadbd -uroot"
	- i guess docker cant terminate mysqld_safe correctly
- mysql_secure_installation not working
	- stil dont know, problematic because of interactive mode

# Questions - whats ...
- portmapping in general and in docker
- the difference between mysql vs mysqld (mariadb vs mariadbd)
    - mysqld is the server executable (one of them)
    - mysql is the command line client
    - mysqladmin is a maintenance or administrative utility
	- https://dev.mysql.com/doc/refman/8.0/en/mysqld.html
	- https://dev.mysql.com/doc/refman/8.0/en/mysql.html
- the difference between mysql and mariadb (as Command-Line Client)
	- nothing, mariadb is a symlink to mysql (cmdline-cli)
	- so every mariadb "function" can be replaced by mysql (except the CMD[] maybe)
	- https://mariadb.com/kb/en/mariadb-command-line-client/
- "service mariadb start" ("or service mariadb start")
	- uses the init script associated with the MariaDB service to start and manage the mariadbd daemon
- mysqld_safe
	- is a script and not a system service, so you wouldn't use the service command to start it.
	- https://dev.mysql.com/doc/refman/8.0/en/mysqld-safe.html 
- query
	- In relational database management systems, a query is any command used to retrieve data from a table.
- the difference between static and dynamic web-pages
	- static:
		- each page on a static website is a single html file, which is served from the server to the web-page (visitor)	 
		- every visitor will see the same page
		- the content is predefined in the source code and can only change if the original-html code changes
		- practical for resume pages, any website that shouldnt change based on the user (if users are even required)
		- the page can stil be interactive but whats visible is predefined in the code  
		the source code (the code for your page, inlcuding buttons etc., so the page CAN change ) is not build on the server and is already defined in the code and lies ON a server 
	- dynamic:
		- the same website (or page) is different for every user (tiktok, youtube, insta)
		- the data of the user (and behaviour) is stored in a database or backend
		- what is shown is not hardcoded 
		- allows you to modify multiple pages aty the same time
	- https://www.wix.com/blog/static-vs-dynamic-website

# Good to know
- create users to run the service, never use the root for actual production etc.
- avoid killall to kill a process, problematic if you are running multiple processes
- when creating the wp-config.php the name of:
	- database
	- user
	- user password
	- hostname
  must match the mariadb database configuration (also the service in.yml must match the hostname)
- wp cli (wordpress command line interface)
	- https://developer.wordpress.org/cli/commands/
- docker cli
	- https://docs.docker.com/engine/reference/commandline/cli/
	- https://docs.docker.com/get-started/docker_cheatsheet.pdf
	- https://devhints.io/docker-compose
- tuning mysql performance (or mariadb) --> my.cnf 
	- https://releem.com/docs/mysql-performance-parameters
- difference between UNIX and IP Sockets
	- A UNIX socket, AKA Unix Domain Socket, is an inter-process communication mechanism that allows bidirectional data exchange between processes running on the same machine.
	- UNIX sockets know that theyâ€™re executing on the same system, so they can avoid some checks and operations (like routing); which makes them faster and lighter than IP sockets. So if you plan to communicate with processes on the same host, this is a better option than IP sockets.

	- IP sockets (especially TCP/IP sockets) are a mechanism allowing communication between processes over the network. (in some cases you could use it for processes on the same hostmachine)
	- sockets are used for client-server services
	- they contain the IP-address of the machine appended by a port number
	- all ports up to 1024 are "well kown" meaning, they are used for standard services like email, https, etc.
- difference between http and https
	- http sends information via the internet through plain text
	- meaning everyone who can intercept the messages can see and understand it (messages, passwords, bank information)
	- https uses encryption to make your message undreadable for interceptors 
	- only the server you talk to can decrypt the message using it's private key (they agreed on a session key before using )